# Generated by Django 3.2.8 on 2021-10-21 14:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('userauth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Movies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('genre', models.CharField(choices=[('Action', 'Action'), ('Adventure', 'Adventure'), ('Animation', 'Animation'), ('Biography', 'Biography'), ('Comedy', 'Comedy'), ('Crime', 'Crime'), ('Documentary', 'Documentary'), ('Drama', 'Drama'), ('Family', 'Family'), ('Fantasy', 'Fantasy'), ('Filmnoir', 'Film-Noir'), ('Gameshow', 'Game-show'), ('History', 'History'), ('Horror', 'Horror'), ('Music', 'Music'), ('Musical', 'Musical'), ('Mystery', 'Mystery'), ('News', 'News'), ('Realitytv', 'Reality-TV'), ('Romance', 'Romance'), ('Scifi', 'Sci-Fi'), ('Sport', 'Sport'), ('Talkshow', 'Talk-Show'), ('Thriller', 'Thriller'), ('War', 'War'), ('Western', 'Western')], max_length=25)),
                ('cast', models.CharField(default='', max_length=200)),
                ('director', models.CharField(default='', max_length=100)),
                ('producer', models.CharField(default='', max_length=100)),
                ('synopsis', models.CharField(default='', max_length=300)),
                ('review', models.URLField(default='')),
                ('thumbnail', models.ImageField(default='', upload_to='images/')),
                ('trailer', models.URLField(default='')),
                ('rating', models.CharField(choices=[('G', 'G General Audiences'), ('PG', 'PG Parental Guidance Suggested'), ('PG-13', 'PG-13 Parents Strongly Cautioned'), ('R', 'R Restricted'), ('NC-17', 'NC-17 Adults Only')], default='', max_length=100)),
                ('showDate', models.DateField(blank=True, null=True)),
                ('showTimes', models.CharField(blank=True, choices=[('9.00 AM', '9.00 AM'), ('11.00 AM', '11.00 AM'), ('2.00 PM', '2.00 PM'), ('5.00 PM', '5.00 PM'), ('9.00 PM', '9.00 PM'), ('11.00 PM', '11.00 PM')], default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Promotions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo_code', models.CharField(max_length=10)),
                ('promo_validity', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_id', models.CharField(max_length=4)),
                ('seat_state', models.BooleanField(default=False)),
                ('cost', models.IntegerField()),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userauth.movies')),
            ],
        ),
        migrations.CreateModel(
            name='ShowRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('showroom', models.IntegerField()),
                ('numSeats', models.IntegerField()),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userauth.movies')),
                ('seat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userauth.seat')),
            ],
        ),
        migrations.CreateModel(
            name='Shows',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_id', models.IntegerField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('duration', models.IntegerField()),
            ],
        ),
        migrations.AlterField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.CharField(max_length=75)),
                ('username', models.CharField(max_length=20)),
                ('date', models.DateTimeField()),
                ('price', models.IntegerField()),
                ('seat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userauth.seat')),
            ],
        ),
        migrations.CreateModel(
            name='Theatre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theatre_name', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=20)),
                ('showroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userauth.showroom')),
            ],
        ),
        migrations.CreateModel(
            name='Bookings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userauth.promotions')),
                ('seats', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userauth.seat')),
                ('showroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userauth.showroom')),
                ('tickets', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userauth.tickets')),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
